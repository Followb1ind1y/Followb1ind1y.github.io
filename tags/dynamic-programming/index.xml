<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Dynamic Programming on Followb1ind1y</title>
    <link>https://followb1ind1y.github.io/tags/dynamic-programming/</link>
    <description>Recent content in Dynamic Programming on Followb1ind1y</description>
    <image>
      <url>https://followb1ind1y.github.io/papermod-cover.png</url>
      <link>https://followb1ind1y.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 28 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://followb1ind1y.github.io/tags/dynamic-programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dynamic Programming</title>
      <link>https://followb1ind1y.github.io/posts/reinforcement_learning/04_dynamic_programming/</link>
      <pubDate>Sat, 28 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://followb1ind1y.github.io/posts/reinforcement_learning/04_dynamic_programming/</guid>
      <description>The term dynamic programming (DP) refers to a collection of algorithms that can be used to compute optimal policies given a perfect model of the environment as a Markov decision process (MDP). Classical DP algorithms are of limited utility in reinforcement learning both because of their assumption of a perfect model and because of their great computational expense, but they are still important theoretically.
Starting with this chapter, we usually assume that the environment is a finite MDP.</description>
    </item>
    
  </channel>
</rss>
